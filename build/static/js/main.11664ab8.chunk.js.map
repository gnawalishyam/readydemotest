{"version":3,"sources":["App.js","Finish.js","index.js"],"names":["App","React","Component","constructor","props","super","start","this","state","recordState","RecordState","START","setState","pause","PAUSE","stop","STOP","showApp","visibility","onStop2","data","record","recordings","find","x","label","letter","blob","console","log","next","onStop","audioData","newCount","counter","pages","length","value","newLetter","btnText","btnClass","item","push","render","Recordings","list","map","v","k","key","controls","src","url","Page","className","id","onClick","type","style","display","backgroundColor","ReactDOM","path","element","Finish","document","getElementById"],"mappings":"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","file":"static/js/main.11664ab8.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\nimport 'audio-react-recorder/dist/index.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      recordState: null,\r\n      visibility:false,\r\n      audioData: null,\r\n      counter: 0,\r\n      letter: \"A\",\r\n      pages: [\"A\",\"B\",\"C\"],\r\n      btnText: \"Next\",\r\n      btnClass:\"btn btn-lg btn-primary\",\r\n      recordings:[]\r\n    }\r\n\r\n    for(let item of this.state.pages)\r\n      this.state.recordings.push({label:item,value:null,blob:null})   \r\n\r\n  }\r\n\r\n  start = () => {\r\n    this.state.recordState = RecordState.START\r\n    this.setState(this.state)\r\n  }\r\n\r\n\r\n\r\n  // const [state, setState] = this.useState({\r\n  //   counter: 0,\r\n  //   letter: \"A\",\r\n  //   pages: [\"A\",\"B\",\"C\"],\r\n  //   btnText: \"Next\",\r\n  //   btnClass:\"btn btn-lg btn-primary\"\r\n  // });\r\n\r\n  pause = () => {\r\n    this.setState({\r\n      recordState: RecordState.PAUSE\r\n    })\r\n  }  \r\n\r\n  stop = () => {\r\n    this.setState({\r\n      recordState: RecordState.STOP\r\n    })\r\n  }\r\n\r\n  showApp=()=>{\r\n    this.state.visibility = true\r\n    this.setState(this.state)\r\n    this.start()\r\n  }\r\n\r\n  onStop2 = (data) => {\r\n    let record = this.state.recordings.find(x=>x.label===this.state.letter)\r\n    if(record)\r\n      record.blob = data\r\n    //this.state.recordings.find(x=>x.label===this.state.letter).blob = data\r\n    this.setState(this.state)\r\n    console.log('onStop: audio data', data)\r\n    this.next()\r\n  }\r\n\r\n  onStop = (data) => {\r\n    this.setState({\r\n      audioData: data\r\n    })\r\n\r\n    console.log('onStop: audio data', data)\r\n  }\r\n\r\n  next = () => {\r\n    let newCount = this.state.counter + 1;\r\n    if (this.state.counter < this.state.pages.length) {\r\n      this.state.recordState = RecordState.STOP      \r\n      this.start()\r\n      this.state.recordings.find(x=>x.label==this.state.letter).value = \"recording done\"+this.state.letter\r\n      let newLetter = this.state.pages[newCount]\r\n      const state = this.state\r\n      this.state.counter = newCount\r\n      this.state.letter = newLetter\r\n      if (newCount === this.state.pages.length - 1) {\r\n        this.state.btnText = \"Finish\"\r\n      }        \r\n    }\r\n    if(this.state.counter===this.state.pages.length){\r\n      this.stop()\r\n      this.state.btnClass = \"d-none\"\r\n    }\r\n    this.setState(this.state)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { recordState } = this.state\r\n\r\n    const Recordings = () =>{\r\n      const products = this.state.recordings;\r\n\r\n      const list = [] \r\n      this.state.recordings.map((v,k)=>{\r\n        console.log(v)\r\n        list.push(<li key={k}>{v.value} \r\n                <audio\r\n\r\n          controls\r\n          src={v.blob ? v.blob.url : null}\r\n        ></audio>\r\n\r\n        </li>)\r\n      })\r\n      \r\n    \r\n      return (\r\n        <div>\r\n          {list}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const Page= ()=>{\r\n      return (\r\n        <div className=\"App\">\r\n          {/* <input\r\n            type=\"button\"\r\n            className={this.state.btnClass}\r\n            name=\"test\"\r\n            value={this.state.btnText}\r\n            onClick={this.next}\r\n          /> */}\r\n\r\n           <button id='stop' onClick={this.stop}\r\n                       type=\"button\"\r\n                       className={this.state.btnClass}\r\n                       //name=\"test\"\r\n                       //value={this.state.btnText}\r\n                       //onClick={this.next}\r\n           >\r\n          {this.state.btnText}\r\n        </button>       \r\n  \r\n          {this.state.counter < this.state.pages.length ? <div style={{display:'block'}}>{this.state.letter}</div>:''}\r\n        \r\n          {this.state.counter===this.state.pages.length && <Recordings/>}\r\n        \r\n        \r\n        </div>)\r\n    }    \r\n    return (\r\n      <div>\r\n          \r\n        {this.state.visibility?<Page/>:''}\r\n        {!this.state.visibility?<button onClick={this.showApp}>Start</button>:''}\r\n        <div style={{display:'none'}}>\r\n\r\n        <AudioReactRecorder\r\n          state={recordState}\r\n          onStop={this.onStop2}\r\n          backgroundColor='rgb(255,255,255)'\r\n        />\r\n        </div>\r\n        {/* <audio\r\n          id='audio'\r\n          controls\r\n          src={this.state.audioData ? this.state.audioData.url : null}\r\n        ></audio>\r\n        <button id='record' onClick={this.start}>\r\n          Start\r\n        </button>\r\n        <button id='pause' onClick={this.pause}>\r\n          Pause\r\n        </button> */}\r\n        {/* <button id='stop' onClick={this.stop}>\r\n          Stop\r\n        </button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\n\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\nimport 'audio-react-recorder/dist/index.css'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      recordState: null,\r\n      audioData: null,\r\n\r\n    }\r\n  }\r\n\r\n  start = () => {\r\n    this.setState({\r\n      recordState: RecordState.START\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  pause = () => {\r\n    this.setState({\r\n      recordState: RecordState.PAUSE\r\n    })\r\n  }\r\n\r\n  stop = () => {\r\n    this.setState({\r\n      recordState: RecordState.STOP\r\n    })\r\n  }\r\n\r\n  onStop = (data) => {\r\n    this.setState({\r\n      audioData: data\r\n    })\r\n    console.log('onStop: audio data', data)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { recordState } = this.state\r\n\r\n    const Page= ()=>{\r\n      return (\r\n        <div className=\"App\">\r\n          All tasks finished\r\n        </div>)\r\n    }    \r\n    return (\r\n      <div>\r\n        <Page/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport App from './App'\r\nimport Finish from './Finish'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n<Routes>\r\n          <Route path=\"/\" element={<App />} />\r\n          <Route path=\"/finish\" element={<Finish />} />\r\n          </Routes>\r\n </BrowserRouter>\r\n, document.getElementById('root'))\r\n"],"sourceRoot":""}